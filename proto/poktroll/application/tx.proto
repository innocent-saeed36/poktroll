syntax = "proto3";

package poktroll.application;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "poktroll/application/params.proto";
import "cosmos/base/v1beta1/coin.proto";

option go_package = "github.com/pokt-network/poktroll/x/application/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams          (MsgUpdateParams         ) returns (MsgUpdateParamsResponse         );
  rpc StakeApplication      (MsgStakeApplication     ) returns (MsgStakeApplicationResponse     );
  rpc UnstakeApplication    (MsgUnstakeApplication   ) returns (MsgUnstakeApplicationResponse   );
  rpc DelegateToGateway     (MsgDelegateToGateway    ) returns (MsgDelegateToGatewayResponse    );
  rpc UndelegateFromGateway (MsgUndelegateFromGateway) returns (MsgUndelegateFromGatewayResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                              "authority";
  option           (amino.name) = "poktroll/x/application/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgStakeApplication {
  option (cosmos.msg.v1.signer) = "address";
           string                   address  = 1;
           cosmos.base.v1beta1.Coin stake    = 2 [(gogoproto.nullable) = false];
  repeated string                   services = 3;
}

message MsgStakeApplicationResponse {}

message MsgUnstakeApplication {
  option (cosmos.msg.v1.signer) = "address";
  string address = 1;
}

message MsgUnstakeApplicationResponse {}

message MsgDelegateToGateway {
  option (cosmos.msg.v1.signer) = "appAddress";
  string appAddress     = 1;
  string gatewayAddress = 2;
}

message MsgDelegateToGatewayResponse {}

message MsgUndelegateFromGateway {
  option (cosmos.msg.v1.signer) = "appAddress";
  string appAddress     = 1;
  string gatewayAddress = 2;
}

message MsgUndelegateFromGatewayResponse {}

